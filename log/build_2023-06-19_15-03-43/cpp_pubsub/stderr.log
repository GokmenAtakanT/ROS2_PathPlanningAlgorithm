[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:[m[K In function â€˜[01m[Kstd::vector<Node_s*> AStar(Node_s*, Node_s*, std::vector<std::vector<Node_s*> >&)[m[Kâ€™:
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:49:27:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Node_s*>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   49 |         for (int i = 1; [01;35m[Ki < openList.size()[m[K; i++) {
      |                         [01;35m[K~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:83:50:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Node_s*>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   83 |         if (currentNode->x > 0 && [01;35m[KcurrentNode->y < grid[0].size() - 1[m[K && !grid[currentNode->x-1][currentNode->y + 1]->obstacle) {
      |                                   [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:86:28:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::vector<Node_s*> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   86 |         if ([01;35m[KcurrentNode->x < grid.size() - 1[m[K && !grid[currentNode->x + 1][currentNode->y]->obstacle) {
      |             [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:89:28:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::vector<Node_s*> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   89 |         if ([01;35m[KcurrentNode->x < grid.size() - 1[m[K && currentNode->y < grid[0].size() - 1 && !grid[currentNode->x+1][currentNode->y + 1]->obstacle) {
      |             [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:89:64:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Node_s*>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   89 |         if (currentNode->x < grid.size() - 1 && [01;35m[KcurrentNode->y < grid[0].size() - 1[m[K && !grid[currentNode->x+1][currentNode->y + 1]->obstacle) {
      |                                                 [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:94:28:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::vector<Node_s*> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
   94 |         if ([01;35m[KcurrentNode->x < grid.size() - 1[m[K && currentNode->y > 0 && !grid[currentNode->x+1][currentNode->y - 1]->obstacle) {
      |             [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/astar.cpp:101:28:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<Node_s*>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  101 |         if ([01;35m[KcurrentNode->y < grid[0].size() - 1[m[K && !grid[currentNode->x][currentNode->y + 1]->obstacle) {
      |             [01;35m[K~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/main.cpp:15[m[K:
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:[m[K In member function â€˜[01m[Kvoid MazeSolver::publishData()[m[Kâ€™:
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:158:27:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<double, std::allocator<double> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  158 |         for (int i = 0; [01;35m[Ki < obsx_.data.size()[m[K; i++)
      |                         [01;35m[K~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:197:74:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Knode->Node_s::x[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  197 |         path_array.push_back(std::move(std::vector<double>{[01;35m[Knode->x[m[K, node->y}));
      |                                                            [01;35m[K~~~~~~^[m[K

[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:197:74:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Knode->Node_s::x[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:197:83:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Knode->Node_s::y[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
  197 | array.push_back(std::move(std::vector<double>{node->x, [01;35m[Knode->y[m[K}));
      |                                                        [01;35m[K~~~~~~^[m[K

[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/include/cpp_pubsub/MazeSolver.h:197:83:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Knode->Node_s::y[m[Kâ€™ from â€˜[01m[Kint[m[Kâ€™ to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/main.cpp:[m[K In function â€˜[01m[Kvoid signalHandler(int)[m[Kâ€™:
[01m[K/home/atakan/Desktop/Github/ROS2_PathPlanningAlgorithm/Ros2/cpp_pubsub/src/astar/main.cpp:20:24:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ksignum[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   20 | void signalHandler([01;35m[Kint signum[m[K)
      |                    [01;35m[K~~~~^~~~~~[m[K
